swagger: '2.0'

###################################################################
#                     API Documentation                           #
###################################################################

host: octopus.com
basePath : /customerManagement/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /customer:
    get:
      operationId: searchCustomer
      tags:
        - "Customer Management"
      summary: "List of Customers"
      description: "Produces List of Customers"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of Customer Will be returned Successfully
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - "Customer Management"
      summary: "Customer Registration"
      description: "Creates New entry for the customer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Customer Input
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        200:
          description: |
            *OK* - List of Admin Users Will be returned Successfully
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
  /customer/{customerId}:
    get:
      operationId: getCustomerById
      tags:
        - "Customer Management"
      summary: "Specific Customer"
      description: "Produces List of Customers"
      parameters:
        - in: path
          name: customerId
          required: true
          type: string
          description: |
            "customer Id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Customer Will be returned Successfully
          schema:
            $ref: "#/definitions/Customer"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    patch:
      operationId: updateCustomer
      tags:
        - "Customer Management"
      summary: "Specific Customer Updation"
      description: "Produces List of Customers"
      parameters:
        - in: path
          name: customerId
          required: true
          type: string
          description: |
            "customer Id"
        - in: header
          name: If-Match
          required: false
          type: string
          description: |
            "customer Id"
        - in: body
          name: Patch Element
          required: true
          schema:
            $ref: "#/definitions/PatchElement"
          description: |
            "customer patch element"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Customer Will be returned Successfully
          schema:
            $ref: "#/definitions/Customer"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"
            
    delete:
      operationId: deleteCustomer
      tags:
        - "Customer Management"
      summary: "Specific Customer Deletion"
      description: "delete Specific Customer"
      parameters:
        - in: path
          name: customerId
          required: true
          type: string
          description: |
            "customer Id"
        - in: header
          name: If-Match
          required: false
          type: string
          description: |
            "customer Id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Customer Will be returned Successfully
          schema:
            $ref: "#/definitions/Customer"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"
      

definitions:
  Customer:
    type: object
    required: [firstName]
    properties:
      id:
        type: string
        description : |
          Id of Particular Customer
      firstName:
        type: string
        description: |
          First name of Particular Customer
      lastName:
        type: string
        description: |
          Last name of Particular Customer
      fullName:
        type: string
        description: |
          Full name of Particular Customer
      _type:
        type: string
        description: |
          Type of Particular Customer
      postal_address:
        $ref: "#/definitions/CustomerPostalAdress"
      billing_address:
        $ref: "#/definitions/CustomerPostalAdress"
      contact_details:
        $ref: "#/definitions/ContactMedium"
      financialAccount:
        $ref: "#/definitions/FinancialAccountRef"
      status:
        type: string
      service-accounts:
        $ref: "#/definitions/ServiceAccountsRef"
  
  ServiceAccountsRef:
    type: object
    properties:
      octomed:
        $ref: "#/definitions/PatientAccountsRef"
  
  PatientAccountsRef:
    type: object
    properties:
      isOctoMedCustomer:
        type: boolean
      patientIds:
        type: array
        items:
          type: string
    
  FinancialAccountRef:
    type: object
    properties:
      id: 
        type: string
      _type: 
        type: string
        description: |
          Type of the account belongs to the Customer
      status:
        type: string
        description: |
          status of FA will tell active or suspended
          
  CustomerPostalAdress:
    type: object
    required: [city, zipcode, state, country]
    properties:
      area:
        type: string
        description: |
          Area of Postal adress
      street:
        type: string
        description: |
          street of Postal adress
      city:
        type: string
        description: |
          city of Postal adress
      state:
        type: string
        description: |
          State of Postal adress
      zipcode:
        type: string
        description: |
          zipcode of Postal adress
      country:
        type: string
        description: |
          country of Postal adress
          
  ContactMedium:
    type: object
    properties:
      email:
        type: string
        description: |
          Email id of Particular Customer
      mobile:
        type: string
        description: |
          mobile of Particular Customer
      fax:
        type: string
        description: |
          fax of Particular Customer
      alternate_number:
        type: string
        description: |
          mobile of Particular Customer
          
  PatchElement:
    type: array
    items: 
      properties:
        op: 
          type: string
          description: |
            Operation To be performed
          example: add, remove, replace
        value: 
          type: string
          description: |
            Value To be replaced
        path: 
          type: string
          description: |
            Object Path to be Patched
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the error code
      message:
        type: string
        description: |
          Error message
      details:
        type: string
        description: |
          Error Details
      path:
        type: string
        description: |
          Error Path

