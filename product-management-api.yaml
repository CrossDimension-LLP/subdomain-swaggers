openapi: 3.0.1
info:
  title: Octopus Product Management
  license:
    name: Octopus.org
  version: v1.0.0-beta
servers:
- url: https://example.com/productManagement/v1
- url: http://example.com/productManagement/v1
paths:
  /category:
    get:
      tags:
      - Category Management
      summary: Get Category
      description: Create Category
      operationId: searchCategory
      parameters:
      - name: filters
        in: query
        description: |
          List of Ids to be Inserted here.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: isParentCategory
        in: query
        schema:
          type: boolean
      - name: _type
        in: query
        description: |
          List of types to be Inserted here.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - Product Category Will be returned Successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategory'
        400:
          description: |
            *Error* - Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            *Error* - Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: |
            *Error* - Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Category Management
      summary: Create Category
      description: Create Category
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
        required: true
      responses:
        200:
          description: |
            *OK* - Product Category Will be returned Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        400:
          description: |
            *Error* - Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            *Error* - Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: |
            *Error* - Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Category Input
  /category/groups:
    post:
      tags:
      - Category Management
      summary: Grouping multiple Categories
      description: Create Category
      operationId: groupCategory
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductCategory'
        required: true
      responses:
        200:
          description: |
            *OK* - Product Category Will be returned Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        400:
          description: |
            *Error* - Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            *Error* - Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: |
            *Error* - Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Group Inputs
  /category/{categoryId}:
    get:
      tags:
      - Category Management
      summary: Get Category by Id
      description: Create Category
      operationId: getCategoryById
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: |
            *OK* - Product Category Will be returned Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        400:
          description: |
            *Error* - Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            *Error* - Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: |
            *Error* - Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Category Management
      summary: Delete Category
      description: Delete Category
      operationId: deleteCategory
      parameters:
      - name: categoryId
        in: path
        description: |
          Id to be dleted here.
        required: true
        schema:
          type: string
      responses:
        200:
          description: |
            *OK* - Product Category Will be returned Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        400:
          description: |
            *Error* - Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            *Error* - Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: |
            *Error* - Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Category Management
      summary: Adding Sub category by Patch
      description: Create Category
      operationId: addSubCategory
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSubProduct'
        required: true
      responses:
        200:
          description: |
            *OK* - Product Category Will be returned Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        400:
          description: |
            *Error* - Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            *Error* - Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: |
            *Error* - Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Sub Category Input
  /product:
    get:
      tags:
      - Product Management
      summary: List of Products
      description: Produces List of Products
      operationId: searchProduct
      parameters:
      - name: filters
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of Products Will be returned Successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        400:
          description: |
            *Error* - Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            *Error* - Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: |
            *Error* - Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Product Management
      summary: Create New Product
      description: Produces List of Products
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
        required: true
      responses:
        200:
          description: |
            *OK* - List of Products Will be returned Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: |
            *Error* - Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            *Error* - Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: |
            *Error* - Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Product Input
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: |
            Id of Particular Product
        name:
          type: string
          description: |
            Name of the Product
        displayName:
          type: string
          description: |
            Display Name of the Product
        productType:
          type: string
          description: |
            Type of the particular product
        productSource:
          $ref: '#/components/schemas/ProductSource'
        productCategory:
          $ref: '#/components/schemas/ProductCategoryRef'
    ProductSource:
      type: object
      properties:
        id:
          type: string
          description: |
            Id of particular product source
        name:
          type: string
          description: |
            name of the product source
        sourceType:
          type: string
          description: |
            source type of the product
        domain:
          type: string
          description: |
            domain of the product
        subdomain:
          type: string
          description: |
            sub-domain of the product
    ProductCategoryRef:
      type: object
      properties:
        id:
          type: string
          description: |
            Id of particular product category
        parentId:
          type: string
          description: |
            This is contain the Id of Immediate parent.
        categoryName:
          type: string
          description: |
            name of the product category
        displayName:
          type: string
          description: |
            name of the product which will be diplayed at UI
        _type:
          type: string
          description: |
            type of the product which will be diplayed at UI
    ProductCategory:
      required:
      - _type
      - categoryName
      - isParentCategory
      - parentId
      - subType
      type: object
      properties:
        id:
          type: string
          description: |
            Id of particular product category
        parentId:
          type: string
          description: |
            This is contain the Id of Immediate parent.
        categoryName:
          type: string
          description: |
            name of the product category
        displayName:
          type: string
          description: |
            name of the product which will be diplayed at UI
        _type:
          type: string
          description: |
            type of the product which will be diplayed at UI
        subType:
          type: string
          description: |
            Subtype of the product which will be diplayed at UI
        isParentCategory:
          type: boolean
          description: |
            This is signifies that category is boolean or not
        description:
          type: string
          description: |
            desc of the product category
        productSubCategory:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
    ProductInput:
      required:
      - name
      - productCategory
      - productSource
      - productType
      type: object
      properties:
        id:
          type: string
          description: |
            Id of Particular Product
        name:
          type: string
          description: |
            Name of the Product
        productType:
          type: string
          description: |
            Type of the particular product
        productSource:
          $ref: '#/components/schemas/ProductSource'
        productCategory:
          $ref: '#/components/schemas/ProductCategory'
    PatchSubProduct:
      type: array
      items:
        type: object
        properties:
          op:
            type: string
            description: |
              Operation To be performed
            example: add, remove, replace
          value:
            $ref: '#/components/schemas/ProductCategory'
          path:
            type: string
            description: |
              Object Path to be Patched
    Error:
      type: object
      properties:
        status:
          type: string
          description: |
            Status of the error code
        message:
          type: string
          description: |
            Error message
        details:
          type: string
          description: |
            Error Details
        path:
          type: string
          description: |
            Error Path
