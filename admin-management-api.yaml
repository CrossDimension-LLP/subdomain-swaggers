swagger: '2.0'

###################################################################
#                     API Documentation                           #
###################################################################
host: octopus.com
basePath : /adminManagement/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /group:
    get:
      operationId: searchGroup
      tags:
        - "Hospital/Diagnostics Group Management"
      summary: "List of Groups"
      description: "Produces List of Customers"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of groups Will be returned Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Group"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
    post:
      operationId: createGroup
      tags:
        - "Hospital/Diagnostics Group Management"
      summary: "Create a Group"
      description: "Produces A Group"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Group Input
          required: true
          schema:
            $ref: "#/definitions/Group"
      responses:
        200:
          description: |
            *OK* - A group info Will be returned Successfully
          schema:
            $ref: "#/definitions/Group"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
  
    patch:
      operationId: updateGroup
      tags:
        - "Hospital/Diagnostics Group Management"
      summary: "Update A Group"
      description: "A Group is updated"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          required: true
          name: groupId
          type: string
          
        - in: body
          required: true
          name: patchElement
          schema:
            $ref: "#/definitions/PatchElement"
      responses:
        200:
          description: |
            *OK* - A group Will be returned Successfully
          schema:
            $ref: "#/definitions/Group"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
      
    delete:
      operationId: deleteGroup
      tags:
        - "Hospital/Diagnostics Group Management"
      summary: "Delete of Groups"
      description: "A Group wil deleted Successfully"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          required: true
          name: groupIds
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - A List of deleted groups Will be returned Successfully
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Group"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
  /standalone:
    post:
      operationId: createStandAlone
      tags:
        - "Hospital/Diagnostics StandAlone Management"
      summary: "Create a Stand Alone"
      description: "Produces A StandaloneCenter"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Center_Input
          required: true
          schema:
            $ref: "#/definitions/StandaloneCenterModel"
      responses:
        200:
          description: |
            *OK* - A Stand Alone Center info Will be returned Successfully
          schema:
            $ref: "#/definitions/StandaloneCenterModel"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
    get:
      operationId: getStandAlone
      tags:
        - "Hospital/Diagnostics StandAlone Management"
      summary: "Get Stand Alone centers"
      description: "Produces A StandaloneCenter"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: standAloneIds
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - Stand Alone Models info Will be returned Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/StandaloneCenterModel"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
    patch:
      operationId: updateStandAlone
      tags:
        - "Hospital/Diagnostics StandAlone Management"
      summary: "Update Stand Alone center"
      description: "Produces A StandaloneCenter"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          required: true
          name: standAloneId
          type: string
            
        - in: body
          required: true
          name: patchElement
          schema:
            $ref: "#/definitions/PatchElement"
  
      responses:
        200:
          description: |
            *OK* - Stand Alone Models info Will be returned Successfully
          schema:
            $ref: "#/definitions/StandaloneCenterModel"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      operationId: deleteStandAlone
      tags:
        - "Hospital/Diagnostics StandAlone Management"
      summary: "Delete Stand Alone centers"
      description: "Produces A List of StandaloneCenter Response"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          required: true
          name: standAloneIds
          type: array
          items: 
            type: string
            
      responses:
        200:
          description: |
            *OK* - Stand Alone Models info Will be returned Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/StandaloneCenterModel"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
  /opdManagement:
    get:
      operationId: searchOPD
      tags:
        - "OPD Management"
      summary: "List of OPDs"
      description: "Produces List of OPD Departments"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: opdIds
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of groups Will be returned Successfully
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OPDModel"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
    post:
      operationId: createOPD
      tags:
        - "OPD Management"
      summary: "Create an OPD"
      description: "Produces An OPD"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: OPDInput
          required: true
          schema:
            $ref: "#/definitions/OPDModel"
      responses:
        200:
          description: |
            *OK* - An OPD info Will be returned Successfully
          schema:
            $ref: "#/definitions/OPDModel"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
    patch:
      operationId: updateIndividual
      tags:
        - "OPD Management"
      summary: "Update OPD"
      description: "Update An OPD"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          required: true
          name: opdId
          type: string
            
        - in: body
          required: true
          name: patchElement
          schema:
            $ref: "#/definitions/PatchElement"
  
      responses:
        200:
          description: |
            *OK* - OPD info Will be returned Successfully
          schema:
            $ref: "#/definitions/OPDModel"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
    delete:
      operationId: deleteOPD
      tags:
        - "OPD Management"
      summary: "Delete OPD"
      description: "Produces A List of OPD Response"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          required: true
          name: opdIds
          type: array
          items: 
            type: string
            
      responses:
        200:
          description: |
            *OK* - List of OPDs info Will be returned Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/OPDModel"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
  /individual:
    get:
      operationId: searchIndividual
      tags:
        - "Interaction Individual Management"
      summary: "List of Individuals"
      description: "Produces List of Individual"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: individualIds
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of groups Will be returned Successfully
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IndividualRef"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
    post:
      operationId: createIndividual
      tags:
        - "Interaction Individual Management"
      summary: "Create an Individual"
      description: "Produces An Individual"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: IndividualInput
          required: true
          schema:
            $ref: "#/definitions/IndividualRef"
      responses:
        200:
          description: |
            *OK* - An Individual info Will be returned Successfully
          schema:
            $ref: "#/definitions/IndividualRef"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
    patch:
      operationId: updateIndividual
      tags:
        - "Interaction Individual Management"
      summary: "Update Individual"
      description: "Update An Individual"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          required: true
          name: individualId
          type: string
            
        - in: body
          required: true
          name: patchElement
          schema:
            $ref: "#/definitions/PatchElement"
  
      responses:
        200:
          description: |
            *OK* - Individual info Will be returned Successfully
          schema:
            $ref: "#/definitions/IndividualRef"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
      
    delete:
      operationId: deleteIndividual
      tags:
        - "Interaction Individual Management"
      summary: "Delete Indiviudal"
      description: "Produces A List of Individual Response"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          required: true
          name: individualIds
          type: array
          items: 
            type: string
            
      responses:
        200:
          description: |
            *OK* - List of Individuals info Will be returned Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/IndividualRef"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
      
definitions:
  OPDModel:
    type: object
    properties:
      id: 
        type: string
        description: |
          ID of OPD Departments
      centerId:
        type: string
        description: |
          ID of Centers where Departments attach to
      opdName:
        type: string
        description: |
          Name of OPD Departments
      opdDescription:
        type: string
        description: |
          Description of OPD Departments
      subdomains:
        type: array
        items:
          type: string
          description: |
            sub divisions of OPD
      opdContact:
        $ref: "#/definitions/ContactMedium"
  
  IndividualRef:
    type: object
    required: [opdId, role, email, firstName]
    properties:
      id: 
        type: string
        description: |
          ID of Individual Person
      opdId:
        type: string
        description: |
          ID of Attached OPD centers
      role:
        type: string
        description: |
          Role of Individual Person
      email: 
        type: string
        description: |
          Email of Individual Person
      accessKey:
        type: string
        description: |
          Access Key of Individual Person
      namePrefix:
        type: string
        description: |
          Name of Individual Person
        example: ["Mr", "Mrs", "Dr"]
      firstName:
        type: string
        description: |
          First name of Individual Person
      lastName:
        type: string
        description: |
          Last name of Individual Person
      fullName:
        type: string
        description: |
          Full name of Individual Person
      designation:
        type: string
        description: |
          Designation of Person
      degrees:
        type: array
        items: 
          type: string
          description: |
            In case of Doctors
          example: [Ms, Mphil, PGDMS]
      contactNumber: 
        type: string
      alternateNumber:
        type: string
      slotDetails: 
        $ref: "#/definitions/SlotDetails"
     
  SlotCapacity:
    type: object
    properties: 
      timing:
        type: string
        description: |
          Slot Timing for visiting
      capacity:
        type: integer
        description: |
          Capacity to check in a single slot
      
  SlotDetails:
    type: object
    required: [timing]
    properties: 
      dayofWeek: 
        type: string
        description: | 
           Slot Week day
      slots: 
        type: array
        items:
          $ref: "#/definitions/SlotCapacity"
      frequencyType:
        type: string
        description: | 
          Frequency of Visiting the Chamber
        example: [WEEKLY, MOTHLY, QUARTERLY, DAILY]
        
  Group:
    type: object
    properties:
      id:
        type: string
      parentId:
        type: string
        description: |
          Parent ID  of the Hospital
      rootId:
        type: string
        description: |
          Root ID  of the Group Under Which this Hospital is Grouped
      primaryId:
        type: string
        description: |
          Priamry ID  of the Group Under Which this Hospital is Grouped
      state:
        type: string
        description: |
          State of the Hospital
      country:
        type: string
        description: |
          Country in Which this branch is placed
      city:
        type: string
        description: |
          City in Which this branch is placed
      contactDetails:
        $ref: "#/definitions/ContactMedium"
      billingDetails:
        $ref: "#/definitions/PostalAdress"
      contactAddress: 
        $ref: "#/definitions/PostalAdress"
        
  
  PostalAdress:
    type: object
    required: [city, zipcode, state, country]
    properties:
      area:
        type: string
        description: |
          Area of Postal adress
      street:
        type: string
        description: |
          street of Postal adress
      city:
        type: string
        description: |
          city of Postal adress
      state:
        type: string
        description: |
          State of Postal adress
      zipcode:
        type: string
        description: |
          zipcode of Postal adress
      country:
        type: string
        description: |
          country of Postal adress
  
        
  StandaloneCenterModel:
    allOf:
      - $ref: "#/definitions/Group"
      - type: object
        properties:
          facility:
            type: array
            items:
              type: string
            description: |
              Facility for services for Standalone diagnostics Centers
              
  
  PatchElement:
    type: array
    items: 
      properties:
        op: 
          type: string
          description: |
            Operation To be performed
          example: add, remove, replace
        value: 
          type: string
          description: |
            Value To be replaced
        path: 
          type: string
          description: |
            Object Path to be Patched
  
  ContactMedium:
    type: object
    properties:
      email:
        type: string
        description: |
          Email id of Particular Patient
      mobile:
        type: string
        description: |
          mobile of Particular Patient
      alternate_number:
        type: string
        description: |
          mobile of Particular Patient
      fax:
        type: string
        description: |
          Added Fax details for Description 
      deskPhone:
        type: string
        description: |
          Desk cell number is Given here
          
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the error code
      message:
        type: string
        description: |
          Error message
      details:
        type: string
        description: |
          Error Details
      path:
        type: string
        description: |
          Error Path
      

