swagger: '2.0'

###################################################################
#                     API Documentation                           #
###################################################################
host: octopus.com
basePath : /partyManagement/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /permissions:
    post:
      operationId: createRole
      tags:
        - "Permission Management"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Create user Role"
      parameters:
        - in: body
          name: roleInput
          required: true
          schema:
            $ref: "#/definitions/UserRole"
      responses:
        200:
          description: |
            *OK* - User Role Will be returned Successfully
          schema:
            $ref: "#/definitions/UserRole"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"    
 
  /permissions/{roleId}:
    get:
      operationId: getRole
      tags:
        - "Permission Management"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Create user Role"
      parameters:
        - in: path
          name: roleId
          required: true
          type: string
          description: |
            "Role Id"
      responses:
        200:
          description: |
            *OK* - ID specific User Role Will be returned Successfully
          schema:
            $ref: "#/definitions/UserRole"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
  /actions:
    post:
      operationId: createActions
      tags:
        - "Permission Management"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Create actions with default visibilty true"
      parameters:
        - in: body
          name: actionInput
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/PossibleActions"
      responses:
        200:
          description: |
            *OK* - Created Actions Will be returned Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/PossibleActions"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"  
    get:
      operationId: getActions
      tags:
        - "Permission Management"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Get All actions with default visibilty true"
      responses:
        200:
          description: |
            *OK* - Get Actions Will be returned Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/PossibleActions"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"  
  /party:
    get:
      operationId: searchPartyIndividual
      tags:
        - "Party Individual Management"
      summary: "List of Party Individuals"
      description: "Produces List of Party Individuals"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of PartyIndividual Will be returned Successfully
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PartyIndividual"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
    post:
      operationId: createPartyIndividual
      tags:
        - "Party Individual Management"
      summary: "PartyIndividual Registration"
      description: "Creates New entry for the party"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: PartyIndividual Input
          required: true
          schema:
            $ref: "#/definitions/PartyIndividual"
      responses:
        200:
          description: |
            *OK* - List of Admin Users Will be returned Successfully
          schema:
            $ref: "#/definitions/PartyIndividual"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
  /party/{partyId}:
    get:
      operationId: getPartyIndividualById
      tags:
        - "Party Individual Management"
      summary: "Specific PartyIndividual"
      description: "Produces List of PartyIndividuals"
      parameters:
        - in: path
          name: partyId
          required: true
          type: string
          description: |
            "party Id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific PartyIndividual Will be returned Successfully
          schema:
            $ref: "#/definitions/PartyIndividual"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
    patch:
      operationId: updatePartyIndividual
      tags:
        - "Party Individual Management"
      summary: "Specific PartyIndividual Updation"
      description: "Produces List of PartyIndividuals"
      parameters:
        - in: path
          name: partyId
          required: true
          type: string
          description: |
            "party Id"
        - in: header
          name: If-Match
          required: false
          type: string
          description: |
            "party Id"
        - in: body
          name: Patch Element
          required: true
          schema:
            $ref: "#/definitions/PatchElement"
          description: |
            "party patch element"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific PartyIndividual Will be returned Successfully
          schema:
            $ref: "#/definitions/PartyIndividual"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"
            
    delete:
      operationId: deletePartyIndividual
      tags:
        - "Party Individual Management"
      summary: "Specific PartyIndividual Deletion"
      description: "delete Specific PartyIndividual"
      parameters:
        - in: path
          name: partyId
          required: true
          type: string
          description: |
            "party Id"
        - in: header
          name: If-Match
          required: false
          type: string
          description: |
            "party Id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific PartyIndividual Will be returned Successfully
          schema:
            $ref: "#/definitions/PartyIndividual"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"
            
  /otp:
    post:
      operationId: createOTP
      tags:
        - "Validation Management"
      summary: "OTP Validation Management"
      description: "Creates New OTP for the party Mobile login"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: OTP Input
          required: true
          schema:
            $ref: "#/definitions/OtpInput"
      responses:
        200:
          description: |
            *OK* - OTP VAlidation MEssage will be generate successfully
          schema:
            $ref: "#/definitions/OtpValidation"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
      
  /otp/validate:
    post:
      operationId: validateOTP
      tags:
        - "Validation Management"
      summary: "OTP Validation Management"
      description: "Creates New OTP for the party Mobile login"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: OTP Input
          required: true
          schema:
            $ref: "#/definitions/OtpValidateInput"
      responses:
        200:
          description: |
            *OK* - OTP VAlidation Message will be generate successfully
          schema:
            $ref: "#/definitions/OtpValidateSuccess"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
  /login:
    post:
      operationId: login
      tags:
        - "Validation Management"
      summary: "Login Successfuly"
      description: "To Login Happen"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: loginInput
          required: true
          schema:
            $ref: "#/definitions/LoginInput"
      responses:
        200:
          description: |
            *OK* - On Successful Login Party individual will be returned successfully
          schema:
            $ref: "#/definitions/PartyIndividual"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
  /ref/gender:
    get:
      operationId: getGenderInformation
      tags: 
      - Reference Data Management
      summary: "Get Gender reference Values"
      description: "Get reference data related to Gender"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Reference data Related to Gender will be availble.
          schema:
            type: array
            items:
              $ref: "#/definitions/GenderRefData"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
      
  /ref/salutation:
    get:
      operationId: getSalutationInformation
      tags: 
      - Reference Data Management
      summary: "Get Salutations Values"
      description: "Get Salutations Description"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Reference data Related to Gender will be availble.
          schema:
            type: array
            items:
              $ref: "#/definitions/SalutationResponse"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"

definitions:
  LoginInput:
    type: object
    required: [userId, password]
    properties:
      userId:
        type: string
        description: |
          User ID must be email or username
      password:
        type: string
        description: |
          Password for Party individual
      validationMedia:
        $ref: '#/definitions/ValidationMedia'
        
  ValidationMedia:
    type: string
    enum:
    - aadharId
    - username

  PartyIndividual:
    type: object
    required:
      - aadharId
      - username
    properties:
      _id:
        type: string
        description : |
          Id of Particular PartyIndividual
      aadharId:
        type: string
        x-nullable: false
        description : |
          AAdhar Id of Particular PartyIndividual
      username:
        type: string
        description: |
          User Name Should be selected for the first time. 
      password:
        type: string
        description: |
          Salted Password will be slected for the first time.
      firstName:
        type: string
        description: |
          First name of Particular PartyIndividual
      middleName:
        type: string
        description: |
          Middle name of Particular PartyIndividual
      lastName:
        type: string
        description: |
          Last name of Particular PartyIndividual
      fullName:
        type: string
        description: |
          Full name of Particular PartyIndividual
      contact_details:
        $ref: "#/definitions/ContactMedium"
      billingAccountId:
        type: string
        description: |
          Billing Account will be attached with the Party individual
      status:
        $ref: "#/definitions/PartyIndividualStatusRef"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedPartyRef"
  
  PartyIndividualStatusRef: 
    type: string
    enum:
    - ACTIVE
    - PENDING_CONFIRMATION
    - UNAVAILABLE
    - INACTIVE
 
  RelatedPartyRef:
    type: object
    properties:
      role:
        $ref: "#/definitions/Roles"
      relatedPartyId:
        type: string
      fullName:
        type: string
              
  ContactMedium:
    type: object
    properties:
      email:
        type: string
        description: |
          Email id of Particular PartyIndividual
      mobile:
        type: string
        description: |
          mobile of Particular PartyIndividual
      fax:
        type: string
        description: |
          fax of Particular PartyIndividual
      alternate_number:
        type: string
        description: |
          mobile of Particular PartyIndividual
    
  Roles:
    type: string
    enum:
    - PATIENT
    - DOCTOR
    - BOOKING_AGENT
    - RECEPTION_AGENT
    - OPD_AGENT
    - IPD_AGENT
    - ACCOUNT_AGENT
    - FINANCIAL_AGENT
    - ADMIN
    - SALES_AGENT
    - MARKETING_AGENT
    - INFRASTRUCTURE
    
  PatchElement:
    type: array
    items: 
      properties:
        op: 
          type: string
          description: |
            Operation To be performed
          example: add, remove, replace
        value: 
          type: string
          description: |
            Value To be replaced
        path: 
          type: string
          description: |
            Object Path to be Patched
            
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the error code
      message:
        type: string
        description: |
          Error message
      details:
        type: string
        description: |
          Error Details
      path:
        type: string
        description: |
          Error Path
          
  OtpInput:
    type: object
    properties:
      mobile:
        type: string
      email:
        type: string
  
  OtpValidateInput:
    type: object
    required: [otpValue]
    properties:
      mobile:
        type: string
      email:
        type: string
      otpValue:
        type: string
        
  OtpValidateSuccess:
    type: object
    required: [otpValue]
    properties:
      fullName:
        type: string
      message:
        type: string
          
  OtpValidation:
    type: object
    properties:
      mediaType:
        type: string
        description: |
          Media Type must be email or Mobile
      mediaValue:
        type: string
        description: |
          media value must be either email id or phone number
      otpValue:
        type: string
        description: |
          OTP value for media
      generationtime:
        type: string
        description: | 
          generation Time for Secret token
      expiresIn:
        type: string
        description: |
          token expires in
        
  GenderRefData:
    type: object
    properties:
      _type:
        $ref: '#/definitions/SexRefType'
      displayValue:
        type: string
        
  SalutationResponse:
    type: object
    properties:
      name:
        type: string
      displayValue:
        type: string
      referredType:
        $ref: '#/definitions/SalutationRefType'
        
  SalutationRefType:
    type: string
    enum:
    - DR
    - MR
    - MRS
    - MISS
    
  SexRefType:
    type: string
    enum:
    - MALE
    - FEMALE
    - NOT_DISCLOSED
    - TRANSGENDER
  
  UserRole:
    type: object
    properties:
      id: 
        type: string
        description: | 
          Id for the specific Role
      roleName:
        type: string
        description: |
          Name of the specific Role
      roleType:
        $ref: "#/definitions/Roles"
      actions:
        type: array
        items:
          $ref: "#/definitions/PossibleActions"
          
  PossibleActions:
    type: object
    properties: 
      path: 
        type: string
        description: |
          Path will be prefixed by a "/" 
      visibility: 
        type: boolean
        description: |
          Its for visibility
      description:
        type : string
        description: |
          Related information about the component
