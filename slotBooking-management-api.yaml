swagger: '2.0'

###################################################################
#                     API Documentation                           #
###################################################################
host: octopus.com
basePath : /slotBookingManagement/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /slotBooking:
    get:
      operationId: getSlotBooking
      tags:
        - "Slot Booking Management"
      summary: "List of slots booked by user"
      description: "List of slots booked by user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of slots booked by user Will be returned Successfully
          schema:
            $ref: '#/definitions/Success'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: saveSlotBooking
      tags:
        - "Slot Booking Management"
      summary: "Booked slot with patient details will get saved"
      description: "Creates New entry for a booked slot"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Slot Booking Input
          required: true
          schema:
            $ref: "#/definitions/SlotBooking"
      responses:
        200:
          description: |
            *OK* - Inserted Slot Will be returned Successfully
          schema:
            $ref: '#/definitions/Success'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"

    patch:
      operationId: updateSlotBooking
      tags:
        - "Slot Booking Management"
      summary: "Booked Slot Updation by filter"
      description: "Produces List of Booked Slots"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
        - in: body
          name: Patch Element
          required: true
          schema:
            $ref: "#/definitions/PatchElement"
          description: |
            "Slot Booking patch element"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific booked SLot Will be returned Successfully
          schema:
            $ref: '#/definitions/Success'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

    delete:
      operationId: deleteSlotBooking
      tags:
        - "Slot Booking Management"
      summary: "Booked Slot Deletion by filter"
      description: "delete Slot Booking"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Booked Slot Will be returned Successfully
          schema:
            $ref: '#/definitions/Success'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"


definitions:
  SlotBooking:
    type: object
    required: [id, doctorId, patients]
    properties:
      id:
        type: string
        description : |
          Id of Particular Slot booking
      doctorId:
        type: string
        description: |
          Id of doctor of a particular slot
      departmentId:
        type: string
        description: |
          department for which the slot is being booked
      patients:
        type: array
        items:
          $ref: "#/definitions/Patient"
      bookingDate:
        type: string
        description: |
          date of birth
      bookingSlotBracket:
        type: string
        description: |
          start and end time of the slot
      currentAvailableSlot:
        type: integer
      totalAvailableSlot:
        type: integer

  Patient:
    type: object
    required: [firstName, aadharId, sex, dateOfBirth, contactDetails]
    properties:
      id:
        type: string
        description : |
          Id of Particular Patient
      aadharId:
        type: string
        description: |
          Aadhar Id Number
      firstName:
        type: string
        description: |
          First name of Particular Patient
      lastName:
        type: string
        description: |
          Last name of Particular Patient
      fullName:
        type: string
        description: |
          Full name of Particular Patient
      age:
        type: string
        description: |
          Age of the Patient
      contactDetails:
        $ref: "#/definitions/ContactMedium"
      emergencyContactDetails:
        $ref: "#/definitions/ContactMedium"
      sex:
        $ref: "#/definitions/SexRef"
      dateOfBirth:
        type: string
        description: |
          date of birth
      medicalHistory:
        type: string
      octoHealthId:
        type: string
        description: |
          Octo health Card id number for future reference
      currentStatus:
        type: string
        description: |
          For operational Case current position of the patient in the Hospital

  SexRef:
    type: string
    enum:
    - MALE
    - FEMALE
    - TRANSGENDER
    - UNDISCLOSED

  ContactMedium:
    type: object
    properties:
      email:
        type: string
        description: |
          Email id of Particular Customer
      mobile:
        type: string
        description: |
          mobile of Particular Customer
      fax:
        type: string
        description: |
          fax of Particular Customer
      alternate_number:
        type: string
        description: |
          mobile of Particular Customer

  PatchElement:
    type: array
    items:
      properties:
        op:
          type: string
          description: |
            Operation To be performed
          example: add, remove, replace
        value:
          $ref: "#/definitions/Patient"
        path:
          type: string
          description: |
            Object Path to be Patched
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the error code
      message:
        type: string
        description: |
          Error message
      details:
        type: string
        description: |
          Error Details
      path:
        type: string
        description: |
          Error Path
  
  Success:
    type: object
    properties:
      status:
        type: string
        description: |
          200 ok
      message:
        type: string
        description: |
          Success message
      insertedSlotCount:
        type: number
        description: |
          Number of total inserted slots
      path:
        type: string
        description: |
          Path to get the slots
  
  
