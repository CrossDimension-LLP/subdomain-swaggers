swagger: '2.0'

###################################################################
#                     API Documentation                           #
###################################################################
host: octosolutions.in
basePath : /coreDataManagement/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /doctor:
    get:
      operationId: getDoctors
      tags:
        - "Doctor Management"
      summary: "List of Doctors available"
      description: "Produces List of Doctors available"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of Doctors Will be returned Successfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Doctor'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: saveDoctor
      tags:
        - "Doctor Management"
      summary: "Insertion of doctor"
      description: "Creates New entry of a doctor"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Doctor Input
          required: true
          schema:
            $ref: "#/definitions/Doctor"
      responses:
        200:
          description: |
            *OK* - Inserted Doctor Will be returned Successfully
          schema:
            $ref: '#/definitions/Doctor'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"

    patch:
      operationId: updateDoctor
      tags:
        - "Doctor Management"
      summary: "Doctor Updation by filter"
      description: "Produces List of Doctors"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
        - in: body
          name: Patch Element
          required: true
          schema:
            $ref: "#/definitions/PatchElement"
          description: |
            "Doctor patch element"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Doctor Will be returned Successfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Doctor'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

    delete:
      operationId: deleteDoctors
      tags:
        - "Doctor Management"
      summary: "Doctor Deletion by filter"
      description: "delete Doctor"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Doctor Will be returned Successfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Doctor'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

  /doctor/{doctorId}:
    get:
      operationId: getDoctorById
      tags:
        - "Doctor Management"
      summary: "Doctor By Id"
      description: "Produces Doctor for the Id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: doctorId
          required: true
          type: string
          description: |
            Doctor By Id
      responses:
        200:
          description: |
            *OK* - List of Doctors Will be returned Successfully
          schema:
            $ref: '#/definitions/Doctor'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      operationId: deleteDoctorById
      tags:
        - "Doctor Management"
      summary: "Doctor Deletion by Id"
      description: "delete Doctor by id"
      parameters:
        - in: path
          name: doctorId
          required: true
          type: string
          description: |
            delete doctor by id
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Doctor Will be returned Successfully
          schema:
            $ref: '#/definitions/Doctor'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"
            
  /department:
    get:
      operationId: getDepartment
      tags:
        - "Department Management"
      summary: "List of Departments available"
      description: "Produces List of Departments available"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of OPDs Will be returned Successfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Department'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: saveDepartment
      tags:
        - "Department Management"
      summary: "Insertion of Department"
      description: "Creates New entry of a Department"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Department Input
          required: true
          schema:
            $ref: "#/definitions/Department"
      responses:
        200:
          description: |
            *OK* - Inserted Department Will be returned Successfully
          schema:
            $ref: '#/definitions/Department'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"

    patch:
      operationId: updateDepartment
      tags:
        - "Department Management"
      summary: "Department Updation by filter"
      description: "Produces List of Departments"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
        - in: body
          name: Patch Element
          required: true
          schema:
            $ref: "#/definitions/PatchElement"
          description: |
            "Department patch element"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Department Will be returned Successfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Department'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

    delete:
      operationId: deleteDepartment
      tags:
        - "Department Management"
      summary: "Department Deletion by filter"
      description: "delete Department"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Department Will be returned Successfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Department'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

  /department/{departmentId}:
    get:
      operationId: getDepartmentById
      tags:
        - "Department Management"
      summary: "Department By Id"
      description: "Produces Department for the Id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: departmentId
          required: true
          type: string
          description: |
            Department By Id
      responses:
        200:
          description: |
            *OK* - List of Departments Will be returned Successfully
          schema:
            $ref: '#/definitions/Department'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      operationId: deleteDepartmentById
      tags:
        - "Department Management"
      summary: "Department Deletion by Id"
      description: "delete Department by id"
      parameters:
        - in: path
          name: departmentId
          required: true
          type: string
          description: |
            delete department by id
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Department Will be returned Successfully
          schema:
            $ref: '#/definitions/Department'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"
  
  /prescription:
    get:
      operationId: getPrescriptions
      tags:
        - "Prescription Management"
      summary: "List of Prescriptions available"
      description: "Produces List of Prescriptions available"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of Prescriptions Will be returned Prescriptionfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Prescription'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: savePrescription
      tags:
        - "Prescription Management"
      summary: "Insertion of prescription"
      description: "Creates New entry of a prescription"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Prescription Input
          required: true
          schema:
            $ref: "#/definitions/Prescription"
      responses:
        200:
          description: |
            *OK* - Inserted Prescription Will be returned Prescriptionfully
          schema:
            $ref: '#/definitions/Prescription'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"

    patch:
      operationId: updatePrescription
      tags:
        - "Prescription Management"
      summary: "Prescription Updation by filter"
      description: "Produces List of Prescriptions"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
        - in: body
          name: Patch Element
          required: true
          schema:
            $ref: "#/definitions/PatchElement"
          description: |
            "Prescription patch element"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Prescription Will be returned Prescriptionfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Prescription'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

    delete:
      operationId: deletePrescriptions
      tags:
        - "Prescription Management"
      summary: "Prescription Deletion by filter"
      description: "delete Prescription"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Prescription Will be returned Prescriptionfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Prescription'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

  /prescription/{prescriptionId}:
    get:
      operationId: getPrescriptionById
      tags:
        - "Prescription Management"
      summary: "Prescription By Id"
      description: "Produces Prescription for the Id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: prescriptionId
          required: true
          type: string
          description: |
            Prescription By Id
      responses:
        200:
          description: |
            *OK* - List of Prescriptions Will be returned Successfully
          schema:
            $ref: '#/definitions/Prescription'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      operationId: deletePrescriptionById
      tags:
        - "Prescription Management"
      summary: "Prescription Deletion by Id"
      description: "delete Prescription by id"
      parameters:
        - in: path
          name: prescriptionId
          required: true
          type: string
          description: |
            delete prescription by id
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Prescription Will be returned Successfully
          schema:
            $ref: '#/definitions/Prescription'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        409:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"
            
  /organization:
    get:
      operationId: getOrganization
      tags:
        - "Organization Management"
      summary: "List of Organizations available"
      description: "Produces List of Departments available"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of Organizations Will be returned Successfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Organization'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
    post:
      operationId: saveOrganization
      tags:
        - "Organization Management"
      summary: "Insertion of Organization"
      description: "Creates New entry of a Organization"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Organization Input Details
          required: true
          schema:
            $ref: "#/definitions/Organization"
      responses:
        200:
          description: |
            *OK* - Inserted Prescription Will be returned Prescriptionfully
          schema:
            $ref: '#/definitions/Organization'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
            
  /organization/{organizationId}:
    get:
      operationId: getOrganizationById
      tags:
        - "Organization Management"
      summary: "Organization By Id"
      description: "Produces Organization for the Id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
          description: |
            Organization By Id
      responses:
        200:
          description: |
            *OK* - Organization Will be returned Successfully
          schema:
            $ref: '#/definitions/Organization'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
    patch:
      operationId: updateOrganization
      tags:
        - "Organization Management"
      summary: "Organization Updation by Patch Payload"
      description: "Produces List of Prescriptions"
      parameters:
        - in: path
          name: organizationId
          type: string
          required: true

        - in: body
          name: Patch Element
          required: true
          schema:
            $ref: "#/definitions/PatchElement"
          description: |
            "Prescription patch element"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Prescription Will be returned Prescriptionfully
          schema:
            type: array
            items:  
              $ref: '#/definitions/Prescription'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"


definitions:
  Doctor:
    type: object
    required: [id, aadharId, doctorRegistrationId, digiDoctorId, departmentId, involvementType]
    properties:
      id:
        type: string
        description : |
          Id of Particular Doctor 
      aadharId:
        type: string
        description : |
          Aadhar Id of Particular Doctor 
      firstName:
        type: string
        description: |
          first name of a doctor
      middleName:
        type: string
        description: |
          Middle name of a doctor
      lastName:
        type: string
        description: |
          last name of a doctor
      fullName:
        type: string
        description: |
          full name of doctor
      doctorRegistrationId:
        type: string
        description: |
          govt registration id of a doctor
      digiDoctorId:
        type: string
        description: |
          digi doctor id
      departmentId:
        type: string
        description: |
          department id
      hospitalId:
        type: string
        description: |
          hospital id
      qualification:
        type: string
        description: |
          highest qualification of a doctor
      joiningDate:
        type: string
        description: |
          date of joining in the hospital
      designation:
        type: string
        description: |
          designation of a doctor in the hospital
      dateOfBirth:
        type: string
        description: |
          date of birth of a doctor(for analytics purpose)
      gender:
        $ref: '#/definitions/GenderRef'
      involvementType:
        $ref: '#/definitions/DepartmentType'
      contact:
        $ref: '#/definitions/ContactMedium'
        
        
  ContactMedium:
    type: object
    properties:
      email:
        type: string
        description: |
          Email id of Particular Customer
      mobile:
        type: string
        description: |
          mobile of Particular Customer
      fax:
        type: string
        description: |
          fax of Particular Customer
      alternate_number:
        type: string
        description: |
          mobile of Particular Customer
          
  Department:
    type: object
    required: [id, name, organizationType, organizationId]
    properties:
      id: 
        type: string
        description: | 
          id of the department
      name:
        type: string
        description: |
          name of the department
      organizationId:
        type: string
        description: |
          Organization id
      status:
        type: boolean
        description: |
          Status of Department
      organizationDetails:
        $ref: "#/definitions/Organization"
      pocDetails:
        $ref: "#/definitions/ContactMedium"
      startingDate:
        type: string
        description: |
          date of start functioning day of a department to get clear analysis of that department
      freezingDate:
        type: string
        description: |
          date of Freezing functioning day of a department to get clear analysis of that department
          
  Organization:
    type: object
    required: [id, name, organizationType]
    properties:
      id: 
        type: string
        description: | 
          id of the hospital
      name:
        type: string
        description: |
          name of the hospital
      contactMedium:
        $ref: "#/definitions/ContactMedium"
      address:
        $ref: "#/definitions/AdressRef"
      state:
        type: string
        description: |
          State where its Situated
      country:
        type: string
        description: |
          Country where its situated
      organizationType:
        $ref: "#/definitions/OrganizationType"
  
  AdressRef:
    type: object
    properties:
      street1: 
        type: string
        description: | 
          Street 1 of Organization
      street2:
        type: string
        description: |
          Street 2 of Organization
      country:
        type: string
        description: |
          Country of the organizaton
      state:
        type: string
        description: |
          State where its Situated
      zipcode:
        type: string
        description: | 
          Zipcode for the organization
    
          
  OrganizationType:
    type: string
    enum:
    - HOSPITAL_SA
    - HOSPITAL_CH
    - PATH_SA
    - PATH_CH
    - DISP_SA
    - DISP_CH
    - DIAG_SA
    - DIAG_CH
    
  
  Prescription:
    type: object
    required: [id, doctorId, patientId, patientType]
    properties:
      id:
        type: string
        description : |
          Id of Particular Prescription 
      relatedPrescriptions:
        type: array
        items: 
          type: string
          format: byte
          description: |
            pdf version of the prescriptions
      doctorId:
        type: string
        description: |
          id of the doctor
      patient:
        $ref: '#/definitions/Patient'
      departmentId:
        type: string
        description: |
          id of the doctor's department(though it might not be needed)
      hospitalId:
        type: string
        description: |
          id of the hospital(though it might not be needed)
      referredBy:
        type: string
        description: |
          if patient is referred by any other doctor
      patientType:
        $ref: "#/definitions/PatientType"
      medicalHistory:
        type: string
        description: |
          detailed medical history of the patient
      diseaseSymptoms:
        type: string
        description: |
          details about the disease and the symptoms
      clinicalFindings:
        type: string
        description: |
          clinical findings from the lab report, if provided
      diagnosis:
        type: string
        description: |
          diagnosis of the disease
      notes:
        type: string
        description: |
          small notes while prescribing
      conductedProcedure:
        type: string
        description: |
          procedure followed while diagnosing the patient, if possible
      medicines:
        type: array
        items:
          $ref: '#/definitions/MedicineDetails'
      prescribedLabTest:
        type: string
        description: |
          list of lab test(s) to be done
      adviceGiven:
        type: string
        description: |
          any advice given by doctor to the patient to follow
      followUpDate:
        type: string
        description: |
          follow up date if required
      prescription:
        type: string
        format: byte
        description: |
          pdf version of the prescription
          
  PatchElement:
    type: array
    items:
      properties:
        op:
          type: string
          description: |
            Operation To be performed
          example: add, remove, replace
        value:
          type: string
        path:
          type: string
          description: |
            Object Path to be Patched
  
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the error code
      message:
        type: string
        description: |
          Error message
      details:
        type: string
        description: |
          Error Details
      path:
        type: string
        description: |
          Error Path
          
  DepartmentType:
        type: string
        enum:
          - OPD
          - IPD
          - BOTH
  
  Patient:
    type: object
    properties:
      fullName:
        type: string
        description: |
          name of the patient
      aadharId:
        type: string
        description: |
          AAdhar ID of patient
      age:
        type: string
        description: |
          age of the patient
      address:
        type: string
        description: |
          address of the patient
      mobile:
        type: string
        description: |
          phone number of the patient
 
  MedicineDetails:
    type: object
    properties:
      name:
        type: string
        description: |
          name of the medicine
      dosage:
        type: string
        description: |
          dosage of the medicine
      composition:
        type: string
        description: |
          dosage of the medicine
      duration:
        type: string
        description: |
          duration for taking the medicine
      shift:
        type: array
        items:
          $ref: '#/definitions/MedicineShift'

  PatientType:
    type: string
    enum:
    - OP
    - IP
    - BOTH
      
  GenderRef:
    type: string
    enum:
    - MALE
    - FEMALE
  
  MedicineShift:
    type: string
    enum:
    - MBM
    - MAM
    - ABM
    - AAM
    - EBM
    - EAM
    - NBM
    - NAM
