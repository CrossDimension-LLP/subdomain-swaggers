swagger: '2.0'

###################################################################
#                     API Documentation                           #
###################################################################
host: octopus.com
basePath : /slotManagement/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /slot:
    get:
      operationId: getSlots
      tags:
        - "Slot Management"
      summary: "List of Slots available"
      description: "Produces List of Slots available"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of Slots Will be returned Successfully
          schema:
            $ref: '#/definitions/Success'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: saveSlot
      tags:
        - "Slot Management"
      summary: "First slot Insertion for a doctor"
      description: "Creates New entry for a slot of a doctor"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Slot Input
          required: true
          schema:
            $ref: "#/definitions/Slot"
      responses:
        200:
          description: |
            *OK* - Inserted Slot Will be returned Successfully
          schema:
            $ref: '#/definitions/Success'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"

    patch:
      operationId: updateSlot
      tags:
        - "Slot Management"
      summary: "Slot Updation by filter"
      description: "Produces List of Slots"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
        - in: body
          name: Patch Element
          required: true
          schema:
            $ref: "#/definitions/PatchElement"
          description: |
            "Slot patch element"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific SLot Will be returned Successfully
          schema:
            $ref: '#/definitions/Success'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

    delete:
      operationId: deleteSlots
      tags:
        - "Slot Management"
      summary: "Slot Deletion by filter"
      description: "delete Slot"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Slot Will be returned Successfully
          schema:
            $ref: '#/definitions/Success'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"


definitions:
  Slot:
    type: object
    required: [id, doctorId, departmentId, slotDetails]
    properties:
      id:
        type: string
        description : |
          Id of Particular Slot 
      individualId:
        type: string
        description: |
          Id of hospital/standalone of a particular doctor
      doctorId:
        type: string
        description: |
          Id of doctor of a particular slot
      departmentId:
        type: string
        description: |
          department for which the slot is being created
      slotCreationWindowLength:
        type: string
        description: |
          for how many days admin wants to create the slots for specified doctor
      slotCreationDate:
        type: string
        description: |
          slot creation date
      slotStartDate:
        type: string
        description: |
          slot starting date
      availableSlot:
        type: integer
        description: |
          available slot after booking starts
      slotDetails:
        $ref: "#/definitions/SlotDetails"

  SlotDetails:
    type: object
    required: [dayOfWeek, slotStartTime, slotEndTime, slotCapacity]
    properties:
      dayOfWeek:
        type: string
        description : |
          day of week of the slot
      slotStartTime:
        type: string
        description: |
          start time of the slot
      slotEndTime:
        type: string
        description: |
          end time of the slot
      slotBracket:
        type: string
        description: |
          total time for which doctor will be available for the day
      slotCapacity:
        type: string
        description: |
          patient capacity of the slot
      slotDate:
        type: string
        description: |
          slot date
      slotFrequency:
        type: string
        description: |
          frequency of slot
      

  PatchElement:
    type: array
    items:
      properties:
        op:
          type: string
          description: |
            Operation To be performed
          example: add, remove, replace
        value:
          type: string
        path:
          type: string
          description: |
            Object Path to be Patched
  
  Success:
    type: object
    properties:
      status:
        type: string
        description: |
          200 ok
      message:
        type: string
        description: |
          Success message
      insertedSlotCount:
        type: number
        description: |
          Number of total inserted slots
      path:
        type: string
        description: |
          Path to get the slots
  
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the error code
      message:
        type: string
        description: |
          Error message
      details:
        type: string
        description: |
          Error Details
      path:
        type: string
        description: |
          Error Path
