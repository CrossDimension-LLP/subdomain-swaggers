swagger: '2.0'

###################################################################
#                     API Documentation                           #
###################################################################
host: octosolutions.in
basePath : /slotManagement/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /slot:
    get:
      operationId: getSlots
      tags:
        - "Slot Management"
      summary: "List of Slots available"
      description: "Produces List of Slots available"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - List of Slots Will be returned Successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Slot'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: saveSlot
      tags:
        - "Slot Management"
      summary: "Slot Insertion for a Doctor"
      description: "Creates New entry for a slot of a doctor"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: Slot Input
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Slot"
      responses:
        200:
          description: |
            *OK* - Inserted Slot Will be returned Successfully
          schema:
            $ref: '#/definitions/SlotRef'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"

    patch:
      operationId: updateSlot
      tags:
        - "Slot Management"
      summary: "Slot Updation by filter"
      description: "Produces List of Slots"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
        - in: body
          name: Patch Element
          required: true
          schema:
            $ref: "#/definitions/PatchElement"
          description: |
            "Slot patch element"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific SLot Will be returned Successfully
          schema:
            $ref: '#/definitions/SlotRef'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

    delete:
      operationId: deleteSlots
      tags:
        - "Slot Management"
      summary: "Slot Deletion by filter"
      description: "delete Slot"
      parameters:
        - in: query
          name: filters
          type: array
          description: |
            - supported qualifiers [==, >=, !=, <=, =@]
            - ";" will act as filter separator
            - "," will act as value separator in a particular filter
          items:
            type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Slot Will be returned Successfully
          schema:
            type: array
            items: 
              $ref: '#/definitions/SlotRef'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

  /slot/{id}:
    get:
      operationId: getSlotById
      tags:
        - "Slot Management"
      summary: "Slot By Id"
      description: "Produces Slot for the Id"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: |
            Slot By Id
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - Slot Will be returned Successfully
          schema:
            $ref: '#/definitions/Slot'
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      operationId: deleteSlotById
      tags:
        - "Slot Management"
      summary: "Slot Deletion by Id"
      description: "delete Slot by id"
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: |
            delete Slot by id
          items:
            type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: |
            *OK* - Specific Slot Will be returned Successfully
          schema:
            $ref: '#/definitions/SlotRef'
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
        419:
          description: |
            *Error* - Conflict
          schema:
            $ref: "#/definitions/Error"

definitions:
  SlotRef:
    type: object
    properties:
      id:
        type: string
        description : |
          Id of Particular Slot 
      doctorId:
        type: string
        description: |
          Id of doctor of a particular slot
      departmentId:
        type: string
        description: |
          department for which the slot is being created
      slotDetails:
        $ref: "#/definitions/SlotDetails"
      availableSlot:
        type: integer
        description: |
          available slot after booking starts
    
  Slot:
    required: [id, doctorId, departmentId, slotDetails]
    allOf:
      - $ref: "#/definitions/SlotRef"
      - type: object
        properties:
          individualId:
            type: string
            description: |
              Id of hospital/standalone of a particular doctor
          slotCreationWindowLength:
            type: string
            description: |
              for how many days admin wants to create the slots for specified doctor
          slotCreationDate:
            type: string
            description: |
              slot creation date
          slotStartDate:
            type: string
            description: |
              slot starting date
          slotDetails:
            $ref: "#/definitions/SlotDetails"
          parentSlotId:
            type: string
            description : |
              Id of Particular Slot 

  
  SlotFrequencyRef:
    type: string
    enum:
    - WEEKLY
    - DAILY
    - MONTHLY
    - YEARLY
    - BIWEEKLY
    - BIMONTHLY
    
  SlotDetails:
    type: object
    required: [dayOfWeek, slotStartTime, slotEndTime, slotCapacity]
    properties:
      dayOfWeek:
        type: string
        description : |
          day of week of the slot
      slotStartTime:
        type: string
        description: |
          start time of the slot
      slotEndTime:
        type: string
        description: |
          end time of the slot
      slotBracket:
        type: string
        description: |
          total time for which doctor will be available for the day
      slotCapacity:
        type: string
        description: |
          patient capacity of the slot
      slotDate:
        type: string
        description: |
          slot date
      slotFrequency:
        $ref: '#/definitions/SlotFrequencyRef'
      slotGenerateToken:
        type: string
        description: |
          In a Single generation process the slots will be generated under same id 
      

  PatchElement:
    type: array
    items:
      properties:
        op:
          type: string
          description: |
            Operation To be performed
          example: add, remove, replace
        value:
          type: string
        path:
          type: string
          description: |
            Object Path to be Patched
  
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the error code
      message:
        type: string
        description: |
          Error message
      details:
        type: string
        description: |
          Error Details
      path:
        type: string
        description: |
          Error Path

  SlotCountMessage:
    type: object
    properties:
      slotId:
        type: string
        description: |
          id of slot/slot booking
      opType:
        type: string
        enum:
          - INCREMENTAL
          - DECREMENTAL
          
  LatestSlotDetails:
    type: object
    properties:
      slotId:
        type: string
        description: id of slot
      latestSlotDate:
        type: string
        description: |
          unique latest slot date
      parentSlotId:
            type: string
            description : |
              Id of Particular Slot 
        
