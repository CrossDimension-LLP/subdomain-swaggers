swagger: '2.0'

###################################################################
#                     API Documentation                           #
###################################################################
host: octopus.com
basePath : /permission/v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
  
paths:
  /permissions:
    post:
      operationId: createRole
      tags:
        - "Permission Management"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Create user Role"
      parameters:
        - in: body
          name: roleInput
          required: true
          schema:
            $ref: "#/definitions/UserRole"
      responses:
        200:
          description: |
            *OK* - User Role Will be returned Successfully
          schema:
            $ref: "#/definitions/UserRole"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"    
 
  /permissions/{roleId}:
    get:
      operationId: getRole
      tags:
        - "Permission Management"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Create user Role"
      parameters:
        - in: path
          name: roleId
          required: true
          type: string
          description: |
            "Role Id"
      responses:
        200:
          description: |
            *OK* - ID specific User Role Will be returned Successfully
          schema:
            $ref: "#/definitions/UserRole"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"
 
  /profile:
    post:
      operationId: createProfile
      tags:
        - "Profile Management"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Create user Profile"
      parameters:
        - in: body
          name: profileInput
          required: true
          schema:
            $ref: "#/definitions/Profile"
      responses:
        200:
          description: |
            *OK* - User Profile Will be returned Successfully
          schema:
            $ref: "#/definitions/Profile"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"    
            
    get:
      operationId: getProfile
      tags:
        - "Profile Management"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Get user Profile"
      parameters:
        - in: query
          name: filters
          type: array
          items:
            type: string
      responses:
        200:
          description: |
            *OK* - User Profile Will be returned Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Profile"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error"            
            
    patch:
      operationId: modifyProfile
      tags:
        - "Profile Management"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Modify user Profile"
      parameters:
        - in: query
          required: true
          name: profileId
          type: string
            
        - in: body
          required: true
          name: patchElement
          schema:
            $ref: "#/definitions/PatchElement"
      responses:
        200:
          description: |
            *OK* - User Profile Will be returned Successfully
          schema:
            $ref: "#/definitions/Profile"
        400:
          description: |
            *Error* - Bad Request
          schema:
            $ref: "#/definitions/Error"
        500:
          description: |
            *Error* - Internal Server error
          schema:
            $ref: "#/definitions/Error"
        404:
          description: |
            *Error* - Not Found
          schema:
            $ref: "#/definitions/Error" 
            
definitions:
  PatchElement:
    type: array
    items: 
      properties:
        op: 
          type: string
          description: |
            Operation To be performed
          example: add, remove, replace
        value: 
          type: string
          description: |
            Value To be replaced
        path: 
          type: string
          description: |
            Object Path to be Patched
  UserRole:
    type: object
    properties:
      id: 
        type: string
        description: | 
          Id for the specific Role
      roleName:
        type: string
        description: |
          Name of the specific Role
      roleType:
        $ref: "#/definitions/RoleTypeRef"
      allowed_actions:
        type: array
        items:
          $ref: "#/definitions/PossibleActions"
          
  PossibleActions:
    type: object
    properties: 
      path: 
        type: string
        description: |
          Path will be prefixed by a "/" 
      visibility: 
        type: boolean
        description: |
          Its for visibility
      description:
        type : string
        description: |
          Related information about the component
            
  RoleTypeRef:
    type: string
    enum:
    - ADMIN_MANAGEMENT
    - AUTOMATED
    - CUSTOMIZED
  
  Profile:
    type: object
    properties:
      id: 
        type: string
        description: |
          Id autogenrated
      username: 
        type: string
        description: |
          Username for Login purpose
      firstName:
        type: string
        description: | 
          First name for the profile
      lastName: 
        type: string
        description: |
          Last name for he profile
      fullname:
        type: string
        description: | 
          Full name for the Profile
      access_token:
        type: string
        description: | 
          Access_Token for the profile
      email: 
        type: string
        description: | 
          Email for the Future Access for the profile
      mobile:
        type: string
        description: |
          As the contact Information for the Profile
      centreId:
        type: string
        description: | 
          Attached Center Id with which he/she is joined
            
  Error:
    type: object
    properties:
      status:
        type: string
        description: |
          Status of the error code
      message:
        type: string
        description: |
          Error message
      details:
        type: string
        description: |
          Error Details
      path:
        type: string
        description: |
          Error Path 
